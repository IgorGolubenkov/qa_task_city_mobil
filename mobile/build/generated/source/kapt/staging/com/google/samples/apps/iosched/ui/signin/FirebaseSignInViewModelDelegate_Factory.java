// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.signin;

import com.google.samples.apps.iosched.shared.domain.auth.ObserveUserAuthStateUseCase;
import com.google.samples.apps.iosched.shared.domain.prefs.NotificationsPrefIsShownUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FirebaseSignInViewModelDelegate_Factory implements Factory<FirebaseSignInViewModelDelegate> {
  private final Provider<ObserveUserAuthStateUseCase> observeUserAuthStateUseCaseProvider;

  private final Provider<NotificationsPrefIsShownUseCase> notificationsPrefIsShownUseCaseProvider;

  public FirebaseSignInViewModelDelegate_Factory(
      Provider<ObserveUserAuthStateUseCase> observeUserAuthStateUseCaseProvider,
      Provider<NotificationsPrefIsShownUseCase> notificationsPrefIsShownUseCaseProvider) {
    this.observeUserAuthStateUseCaseProvider = observeUserAuthStateUseCaseProvider;
    this.notificationsPrefIsShownUseCaseProvider = notificationsPrefIsShownUseCaseProvider;
  }

  @Override
  public FirebaseSignInViewModelDelegate get() {
    return new FirebaseSignInViewModelDelegate(observeUserAuthStateUseCaseProvider.get(), notificationsPrefIsShownUseCaseProvider.get());
  }

  public static FirebaseSignInViewModelDelegate_Factory create(
      Provider<ObserveUserAuthStateUseCase> observeUserAuthStateUseCaseProvider,
      Provider<NotificationsPrefIsShownUseCase> notificationsPrefIsShownUseCaseProvider) {
    return new FirebaseSignInViewModelDelegate_Factory(observeUserAuthStateUseCaseProvider, notificationsPrefIsShownUseCaseProvider);
  }

  public static FirebaseSignInViewModelDelegate newInstance(
      ObserveUserAuthStateUseCase observeUserAuthStateUseCase,
      NotificationsPrefIsShownUseCase notificationsPrefIsShownUseCase) {
    return new FirebaseSignInViewModelDelegate(observeUserAuthStateUseCase, notificationsPrefIsShownUseCase);
  }
}
