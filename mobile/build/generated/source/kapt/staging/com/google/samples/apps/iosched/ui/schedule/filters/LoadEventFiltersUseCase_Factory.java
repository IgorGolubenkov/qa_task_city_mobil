// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.schedule.filters;

import com.google.samples.apps.iosched.shared.data.tag.TagRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoadEventFiltersUseCase_Factory implements Factory<LoadEventFiltersUseCase> {
  private final Provider<TagRepository> tagRepositoryProvider;

  public LoadEventFiltersUseCase_Factory(Provider<TagRepository> tagRepositoryProvider) {
    this.tagRepositoryProvider = tagRepositoryProvider;
  }

  @Override
  public LoadEventFiltersUseCase get() {
    return new LoadEventFiltersUseCase(tagRepositoryProvider.get());
  }

  public static LoadEventFiltersUseCase_Factory create(
      Provider<TagRepository> tagRepositoryProvider) {
    return new LoadEventFiltersUseCase_Factory(tagRepositoryProvider);
  }

  public static LoadEventFiltersUseCase newInstance(TagRepository tagRepository) {
    return new LoadEventFiltersUseCase(tagRepository);
  }
}
