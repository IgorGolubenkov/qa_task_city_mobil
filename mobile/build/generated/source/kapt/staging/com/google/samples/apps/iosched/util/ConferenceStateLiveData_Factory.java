// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.util;

import com.google.samples.apps.iosched.shared.domain.internal.IOSchedHandler;
import com.google.samples.apps.iosched.shared.time.TimeProvider;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConferenceStateLiveData_Factory implements Factory<ConferenceStateLiveData> {
  private final Provider<IOSchedHandler> handlerProvider;

  private final Provider<TimeProvider> timeProvider;

  public ConferenceStateLiveData_Factory(Provider<IOSchedHandler> handlerProvider,
      Provider<TimeProvider> timeProvider) {
    this.handlerProvider = handlerProvider;
    this.timeProvider = timeProvider;
  }

  @Override
  public ConferenceStateLiveData get() {
    return new ConferenceStateLiveData(handlerProvider.get(), timeProvider.get());
  }

  public static ConferenceStateLiveData_Factory create(Provider<IOSchedHandler> handlerProvider,
      Provider<TimeProvider> timeProvider) {
    return new ConferenceStateLiveData_Factory(handlerProvider, timeProvider);
  }

  public static ConferenceStateLiveData newInstance(IOSchedHandler handler,
      TimeProvider timeProvider) {
    return new ConferenceStateLiveData(handler, timeProvider);
  }
}
