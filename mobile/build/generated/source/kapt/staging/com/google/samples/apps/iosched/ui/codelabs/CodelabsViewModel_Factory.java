// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.codelabs;

import com.google.samples.apps.iosched.shared.domain.codelabs.GetCodelabsInfoCardShownUseCase;
import com.google.samples.apps.iosched.shared.domain.codelabs.LoadCodelabsUseCase;
import com.google.samples.apps.iosched.shared.domain.codelabs.SetCodelabsInfoCardShownUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CodelabsViewModel_Factory implements Factory<CodelabsViewModel> {
  private final Provider<LoadCodelabsUseCase> loadCodelabsUseCaseProvider;

  private final Provider<GetCodelabsInfoCardShownUseCase> getCodelabsInfoCardShownUseCaseProvider;

  private final Provider<SetCodelabsInfoCardShownUseCase> setCodelabsInfoCardShownUseCaseProvider;

  public CodelabsViewModel_Factory(Provider<LoadCodelabsUseCase> loadCodelabsUseCaseProvider,
      Provider<GetCodelabsInfoCardShownUseCase> getCodelabsInfoCardShownUseCaseProvider,
      Provider<SetCodelabsInfoCardShownUseCase> setCodelabsInfoCardShownUseCaseProvider) {
    this.loadCodelabsUseCaseProvider = loadCodelabsUseCaseProvider;
    this.getCodelabsInfoCardShownUseCaseProvider = getCodelabsInfoCardShownUseCaseProvider;
    this.setCodelabsInfoCardShownUseCaseProvider = setCodelabsInfoCardShownUseCaseProvider;
  }

  @Override
  public CodelabsViewModel get() {
    return new CodelabsViewModel(loadCodelabsUseCaseProvider.get(), getCodelabsInfoCardShownUseCaseProvider.get(), setCodelabsInfoCardShownUseCaseProvider.get());
  }

  public static CodelabsViewModel_Factory create(
      Provider<LoadCodelabsUseCase> loadCodelabsUseCaseProvider,
      Provider<GetCodelabsInfoCardShownUseCase> getCodelabsInfoCardShownUseCaseProvider,
      Provider<SetCodelabsInfoCardShownUseCase> setCodelabsInfoCardShownUseCaseProvider) {
    return new CodelabsViewModel_Factory(loadCodelabsUseCaseProvider, getCodelabsInfoCardShownUseCaseProvider, setCodelabsInfoCardShownUseCaseProvider);
  }

  public static CodelabsViewModel newInstance(LoadCodelabsUseCase loadCodelabsUseCase,
      GetCodelabsInfoCardShownUseCase getCodelabsInfoCardShownUseCase,
      SetCodelabsInfoCardShownUseCase setCodelabsInfoCardShownUseCase) {
    return new CodelabsViewModel(loadCodelabsUseCase, getCodelabsInfoCardShownUseCase, setCodelabsInfoCardShownUseCase);
  }
}
