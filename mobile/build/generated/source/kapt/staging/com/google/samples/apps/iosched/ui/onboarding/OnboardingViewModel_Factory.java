// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.onboarding;

import com.google.samples.apps.iosched.shared.domain.prefs.OnboardingCompleteActionUseCase;
import com.google.samples.apps.iosched.ui.signin.SignInViewModelDelegate;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OnboardingViewModel_Factory implements Factory<OnboardingViewModel> {
  private final Provider<OnboardingCompleteActionUseCase> onboardingCompleteActionUseCaseProvider;

  private final Provider<SignInViewModelDelegate> signInViewModelDelegateProvider;

  public OnboardingViewModel_Factory(
      Provider<OnboardingCompleteActionUseCase> onboardingCompleteActionUseCaseProvider,
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider) {
    this.onboardingCompleteActionUseCaseProvider = onboardingCompleteActionUseCaseProvider;
    this.signInViewModelDelegateProvider = signInViewModelDelegateProvider;
  }

  @Override
  public OnboardingViewModel get() {
    return new OnboardingViewModel(onboardingCompleteActionUseCaseProvider.get(), signInViewModelDelegateProvider.get());
  }

  public static OnboardingViewModel_Factory create(
      Provider<OnboardingCompleteActionUseCase> onboardingCompleteActionUseCaseProvider,
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider) {
    return new OnboardingViewModel_Factory(onboardingCompleteActionUseCaseProvider, signInViewModelDelegateProvider);
  }

  public static OnboardingViewModel newInstance(
      OnboardingCompleteActionUseCase onboardingCompleteActionUseCase,
      SignInViewModelDelegate signInViewModelDelegate) {
    return new OnboardingViewModel(onboardingCompleteActionUseCase, signInViewModelDelegate);
  }
}
