// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui;

import android.content.Context;
import com.google.samples.apps.iosched.shared.domain.ar.LoadArDebugFlagUseCase;
import com.google.samples.apps.iosched.shared.domain.sessions.LoadPinnedSessionsJsonUseCase;
import com.google.samples.apps.iosched.ui.signin.SignInViewModelDelegate;
import com.google.samples.apps.iosched.ui.theme.ThemedActivityDelegate;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivityViewModel_Factory implements Factory<MainActivityViewModel> {
  private final Provider<SignInViewModelDelegate> signInViewModelDelegateProvider;

  private final Provider<ThemedActivityDelegate> themedActivityDelegateProvider;

  private final Provider<LoadPinnedSessionsJsonUseCase> loadPinnedSessionsUseCaseProvider;

  private final Provider<LoadArDebugFlagUseCase> loadArDebugFlagUseCaseProvider;

  private final Provider<Context> contextProvider;

  public MainActivityViewModel_Factory(
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider,
      Provider<ThemedActivityDelegate> themedActivityDelegateProvider,
      Provider<LoadPinnedSessionsJsonUseCase> loadPinnedSessionsUseCaseProvider,
      Provider<LoadArDebugFlagUseCase> loadArDebugFlagUseCaseProvider,
      Provider<Context> contextProvider) {
    this.signInViewModelDelegateProvider = signInViewModelDelegateProvider;
    this.themedActivityDelegateProvider = themedActivityDelegateProvider;
    this.loadPinnedSessionsUseCaseProvider = loadPinnedSessionsUseCaseProvider;
    this.loadArDebugFlagUseCaseProvider = loadArDebugFlagUseCaseProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MainActivityViewModel get() {
    return new MainActivityViewModel(signInViewModelDelegateProvider.get(), themedActivityDelegateProvider.get(), loadPinnedSessionsUseCaseProvider.get(), loadArDebugFlagUseCaseProvider.get(), contextProvider.get());
  }

  public static MainActivityViewModel_Factory create(
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider,
      Provider<ThemedActivityDelegate> themedActivityDelegateProvider,
      Provider<LoadPinnedSessionsJsonUseCase> loadPinnedSessionsUseCaseProvider,
      Provider<LoadArDebugFlagUseCase> loadArDebugFlagUseCaseProvider,
      Provider<Context> contextProvider) {
    return new MainActivityViewModel_Factory(signInViewModelDelegateProvider, themedActivityDelegateProvider, loadPinnedSessionsUseCaseProvider, loadArDebugFlagUseCaseProvider, contextProvider);
  }

  public static MainActivityViewModel newInstance(SignInViewModelDelegate signInViewModelDelegate,
      ThemedActivityDelegate themedActivityDelegate,
      LoadPinnedSessionsJsonUseCase loadPinnedSessionsUseCase,
      LoadArDebugFlagUseCase loadArDebugFlagUseCase, Context context) {
    return new MainActivityViewModel(signInViewModelDelegate, themedActivityDelegate, loadPinnedSessionsUseCase, loadArDebugFlagUseCase, context);
  }
}
