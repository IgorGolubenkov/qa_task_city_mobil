// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui;

import android.net.ConnectivityManager;
import androidx.lifecycle.ViewModelProvider;
import com.google.samples.apps.iosched.shared.analytics.AnalyticsHelper;
import com.google.samples.apps.iosched.ui.messages.SnackbarMessageManager;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<SnackbarMessageManager> snackbarMessageManagerProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<ConnectivityManager> connectivityManagerProvider;

  private final Provider<AnalyticsHelper> analyticsHelperProvider;

  private final Provider<Boolean> mapFeatureEnabledProvider;

  private final Provider<Boolean> codelabsFeatureEnabledProvider;

  private final Provider<Boolean> exploreArFeatureEnabledProvider;

  public MainActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SnackbarMessageManager> snackbarMessageManagerProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<ConnectivityManager> connectivityManagerProvider,
      Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<Boolean> mapFeatureEnabledProvider, Provider<Boolean> codelabsFeatureEnabledProvider,
      Provider<Boolean> exploreArFeatureEnabledProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.snackbarMessageManagerProvider = snackbarMessageManagerProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.connectivityManagerProvider = connectivityManagerProvider;
    this.analyticsHelperProvider = analyticsHelperProvider;
    this.mapFeatureEnabledProvider = mapFeatureEnabledProvider;
    this.codelabsFeatureEnabledProvider = codelabsFeatureEnabledProvider;
    this.exploreArFeatureEnabledProvider = exploreArFeatureEnabledProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<SnackbarMessageManager> snackbarMessageManagerProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<ConnectivityManager> connectivityManagerProvider,
      Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<Boolean> mapFeatureEnabledProvider, Provider<Boolean> codelabsFeatureEnabledProvider,
      Provider<Boolean> exploreArFeatureEnabledProvider) {
    return new MainActivity_MembersInjector(androidInjectorProvider, snackbarMessageManagerProvider, viewModelFactoryProvider, connectivityManagerProvider, analyticsHelperProvider, mapFeatureEnabledProvider, codelabsFeatureEnabledProvider, exploreArFeatureEnabledProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectSnackbarMessageManager(instance, snackbarMessageManagerProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectConnectivityManager(instance, connectivityManagerProvider.get());
    injectAnalyticsHelper(instance, analyticsHelperProvider.get());
    injectMapFeatureEnabled(instance, mapFeatureEnabledProvider.get());
    injectCodelabsFeatureEnabled(instance, codelabsFeatureEnabledProvider.get());
    injectExploreArFeatureEnabled(instance, exploreArFeatureEnabledProvider.get());
  }

  public static void injectSnackbarMessageManager(MainActivity instance,
      SnackbarMessageManager snackbarMessageManager) {
    instance.snackbarMessageManager = snackbarMessageManager;
  }

  public static void injectViewModelFactory(MainActivity instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  public static void injectConnectivityManager(MainActivity instance,
      ConnectivityManager connectivityManager) {
    instance.connectivityManager = connectivityManager;
  }

  public static void injectAnalyticsHelper(MainActivity instance, AnalyticsHelper analyticsHelper) {
    instance.analyticsHelper = analyticsHelper;
  }

  public static void injectMapFeatureEnabled(MainActivity instance, boolean mapFeatureEnabled) {
    instance.mapFeatureEnabled = mapFeatureEnabled;
  }

  public static void injectCodelabsFeatureEnabled(MainActivity instance,
      boolean codelabsFeatureEnabled) {
    instance.codelabsFeatureEnabled = codelabsFeatureEnabled;
  }

  public static void injectExploreArFeatureEnabled(MainActivity instance,
      boolean exploreArFeatureEnabled) {
    instance.exploreArFeatureEnabled = exploreArFeatureEnabled;
  }
}
