// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.sessiondetail;

import com.google.samples.apps.iosched.shared.domain.sessions.LoadUserSessionUseCase;
import com.google.samples.apps.iosched.shared.domain.users.FeedbackUseCase;
import com.google.samples.apps.iosched.ui.signin.SignInViewModelDelegate;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SessionFeedbackViewModel_Factory implements Factory<SessionFeedbackViewModel> {
  private final Provider<SignInViewModelDelegate> signInViewModelDelegateProvider;

  private final Provider<LoadUserSessionUseCase> loadUserSessionUseCaseProvider;

  private final Provider<FeedbackUseCase> feedbackUseCaseProvider;

  public SessionFeedbackViewModel_Factory(
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider,
      Provider<LoadUserSessionUseCase> loadUserSessionUseCaseProvider,
      Provider<FeedbackUseCase> feedbackUseCaseProvider) {
    this.signInViewModelDelegateProvider = signInViewModelDelegateProvider;
    this.loadUserSessionUseCaseProvider = loadUserSessionUseCaseProvider;
    this.feedbackUseCaseProvider = feedbackUseCaseProvider;
  }

  @Override
  public SessionFeedbackViewModel get() {
    return new SessionFeedbackViewModel(signInViewModelDelegateProvider.get(), loadUserSessionUseCaseProvider.get(), feedbackUseCaseProvider.get());
  }

  public static SessionFeedbackViewModel_Factory create(
      Provider<SignInViewModelDelegate> signInViewModelDelegateProvider,
      Provider<LoadUserSessionUseCase> loadUserSessionUseCaseProvider,
      Provider<FeedbackUseCase> feedbackUseCaseProvider) {
    return new SessionFeedbackViewModel_Factory(signInViewModelDelegateProvider, loadUserSessionUseCaseProvider, feedbackUseCaseProvider);
  }

  public static SessionFeedbackViewModel newInstance(
      SignInViewModelDelegate signInViewModelDelegate,
      LoadUserSessionUseCase loadUserSessionUseCase, FeedbackUseCase feedbackUseCase) {
    return new SessionFeedbackViewModel(signInViewModelDelegate, loadUserSessionUseCase, feedbackUseCase);
  }
}
