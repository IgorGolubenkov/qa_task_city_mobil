// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.di;

import com.google.firebase.firestore.FirebaseFirestore;
import com.google.samples.apps.iosched.shared.data.signin.datasources.RegisteredUserDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignInModule_ProvideRegisteredUserDataSourceFactory implements Factory<RegisteredUserDataSource> {
  private final SignInModule module;

  private final Provider<FirebaseFirestore> firestoreProvider;

  public SignInModule_ProvideRegisteredUserDataSourceFactory(SignInModule module,
      Provider<FirebaseFirestore> firestoreProvider) {
    this.module = module;
    this.firestoreProvider = firestoreProvider;
  }

  @Override
  public RegisteredUserDataSource get() {
    return provideRegisteredUserDataSource(module, firestoreProvider.get());
  }

  public static SignInModule_ProvideRegisteredUserDataSourceFactory create(SignInModule module,
      Provider<FirebaseFirestore> firestoreProvider) {
    return new SignInModule_ProvideRegisteredUserDataSourceFactory(module, firestoreProvider);
  }

  public static RegisteredUserDataSource provideRegisteredUserDataSource(SignInModule instance,
      FirebaseFirestore firestore) {
    return Preconditions.checkNotNull(instance.provideRegisteredUserDataSource(firestore), "Cannot return null from a non-@Nullable @Provides method");
  }
}
