// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.search;

import com.google.samples.apps.iosched.shared.analytics.AnalyticsHelper;
import com.google.samples.apps.iosched.shared.domain.search.SearchDbUseCase;
import com.google.samples.apps.iosched.shared.domain.search.SearchUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<AnalyticsHelper> analyticsHelperProvider;

  private final Provider<SearchUseCase> loadSearchResultsUseCaseProvider;

  private final Provider<SearchDbUseCase> loadDbSearchResultsUseCaseProvider;

  private final Provider<Boolean> searchUsingRoomFeatureEnabledProvider;

  public SearchViewModel_Factory(Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<SearchUseCase> loadSearchResultsUseCaseProvider,
      Provider<SearchDbUseCase> loadDbSearchResultsUseCaseProvider,
      Provider<Boolean> searchUsingRoomFeatureEnabledProvider) {
    this.analyticsHelperProvider = analyticsHelperProvider;
    this.loadSearchResultsUseCaseProvider = loadSearchResultsUseCaseProvider;
    this.loadDbSearchResultsUseCaseProvider = loadDbSearchResultsUseCaseProvider;
    this.searchUsingRoomFeatureEnabledProvider = searchUsingRoomFeatureEnabledProvider;
  }

  @Override
  public SearchViewModel get() {
    SearchViewModel instance = new SearchViewModel(analyticsHelperProvider.get(), loadSearchResultsUseCaseProvider.get(), loadDbSearchResultsUseCaseProvider.get());
    SearchViewModel_MembersInjector.injectSearchUsingRoomFeatureEnabled(instance, searchUsingRoomFeatureEnabledProvider.get());
    return instance;
  }

  public static SearchViewModel_Factory create(Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<SearchUseCase> loadSearchResultsUseCaseProvider,
      Provider<SearchDbUseCase> loadDbSearchResultsUseCaseProvider,
      Provider<Boolean> searchUsingRoomFeatureEnabledProvider) {
    return new SearchViewModel_Factory(analyticsHelperProvider, loadSearchResultsUseCaseProvider, loadDbSearchResultsUseCaseProvider, searchUsingRoomFeatureEnabledProvider);
  }

  public static SearchViewModel newInstance(AnalyticsHelper analyticsHelper,
      SearchUseCase loadSearchResultsUseCase, SearchDbUseCase loadDbSearchResultsUseCase) {
    return new SearchViewModel(analyticsHelper, loadSearchResultsUseCase, loadDbSearchResultsUseCase);
  }
}
