// Generated by Dagger (https://dagger.dev).
package com.google.samples.apps.iosched.ui.schedule;

import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.RecyclerView;
import com.google.samples.apps.iosched.shared.analytics.AnalyticsHelper;
import com.google.samples.apps.iosched.ui.messages.SnackbarMessageManager;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ScheduleFragment_MembersInjector implements MembersInjector<ScheduleFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<AnalyticsHelper> analyticsHelperProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<RecyclerView.RecycledViewPool> tagViewPoolProvider;

  private final Provider<Boolean> searchScheduleFeatureEnabledProvider;

  private final Provider<SnackbarMessageManager> snackbarMessageManagerProvider;

  public ScheduleFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<RecyclerView.RecycledViewPool> tagViewPoolProvider,
      Provider<Boolean> searchScheduleFeatureEnabledProvider,
      Provider<SnackbarMessageManager> snackbarMessageManagerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.analyticsHelperProvider = analyticsHelperProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.tagViewPoolProvider = tagViewPoolProvider;
    this.searchScheduleFeatureEnabledProvider = searchScheduleFeatureEnabledProvider;
    this.snackbarMessageManagerProvider = snackbarMessageManagerProvider;
  }

  public static MembersInjector<ScheduleFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<AnalyticsHelper> analyticsHelperProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<RecyclerView.RecycledViewPool> tagViewPoolProvider,
      Provider<Boolean> searchScheduleFeatureEnabledProvider,
      Provider<SnackbarMessageManager> snackbarMessageManagerProvider) {
    return new ScheduleFragment_MembersInjector(androidInjectorProvider, analyticsHelperProvider, viewModelFactoryProvider, tagViewPoolProvider, searchScheduleFeatureEnabledProvider, snackbarMessageManagerProvider);}

  @Override
  public void injectMembers(ScheduleFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectAnalyticsHelper(instance, analyticsHelperProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectTagViewPool(instance, tagViewPoolProvider.get());
    injectSearchScheduleFeatureEnabled(instance, searchScheduleFeatureEnabledProvider.get());
    injectSnackbarMessageManager(instance, snackbarMessageManagerProvider.get());
  }

  public static void injectAnalyticsHelper(ScheduleFragment instance,
      AnalyticsHelper analyticsHelper) {
    instance.analyticsHelper = analyticsHelper;
  }

  public static void injectViewModelFactory(ScheduleFragment instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  public static void injectTagViewPool(ScheduleFragment instance,
      RecyclerView.RecycledViewPool tagViewPool) {
    instance.tagViewPool = tagViewPool;
  }

  public static void injectSearchScheduleFeatureEnabled(ScheduleFragment instance,
      boolean searchScheduleFeatureEnabled) {
    instance.searchScheduleFeatureEnabled = searchScheduleFeatureEnabled;
  }

  public static void injectSnackbarMessageManager(ScheduleFragment instance,
      SnackbarMessageManager snackbarMessageManager) {
    instance.snackbarMessageManager = snackbarMessageManager;
  }
}
